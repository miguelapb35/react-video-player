{"version":3,"sources":["components/styles/StyledVideoWrapper.js","components/styles/StyledVideo.js","components/Video.js","components/styles/StyledPlaylistHeader.js","components/styles/StyledJourney.js","components/PlaylistHeader.js","components/styles/StyledPlaylistItem.js","components/PlaylistItem.js","components/styles/StyledPlaylistitems.js","components/containers/PlaylistItems.js","components/hoc/withLink.js","components/styles/StyledNightmode.js","components/Nightmode.js","components/styles/StyledPlaylist.js","components/containers/Playlist.js","components/styles/StyledWbnPlayer.js","components/containers/WbnPlayer.js","components/styles/GlobalStyle.js","components/containers/App.js","serviceWorker.js","index.js"],"names":["StyledVideoWrapper","styled","div","StyledVideo","Video","active","autoplay","endCallback","progressCallback","width","height","style","position","top","playing","controls","url","video","onEnded","onProgress","StyledPlaylistHeader","StyledJourney","PlaylistHeader","total","title","num","StyledPlaylistItem","props","theme","color","played","PlaylistItem","className","duration","StyledPlaylistitems","PlaylistItemWithLink","WrappedComponent","newProps","to","pathname","id","withLink","PlaylistItems","videos","map","key","StyledNightmode","NightMode","nightModeCallback","type","checked","onChange","StyledPlaylist","Playlist","nightMode","length","StyledWbnPlayer","bgcolor","border","bgcolorItem","bgcolorItemActive","bgcolorPlayed","borderPlayed","themeLight","WbnPlayer","JSON","parse","document","querySelector","value","savedState","localStorage","getItem","playlistId","useState","playlist","activeVideo","state","setState","useEffect","setItem","stringify","videoId","match","params","undefined","newActiveVideo","findIndex","prev","location","history","push","currentVideoIndex","nextVideo","e","playedSeconds","find","GlobalStyle","createGlobalStyle","App","basename","exact","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd254ba9.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst StyledVideoWrapper = styled.div`\r\n  width: 100%;\r\n  padding-bottom: 56.25%;\r\n  position: relative;\r\n`;\r\n\r\nexport default StyledVideoWrapper;","import styled from \"styled-components\";\r\n\r\nconst StyledVideo = styled.div`\r\n  position: relative;\r\n  -webkit-box-flex: 2;\r\n  -ms-flex: 2 0 900px;\r\n  flex: 2 0 900px;\r\n  @media screen and (max-width: 1400px) {\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport default StyledVideo;","import React from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport StyledVideoWrapper from './styles/StyledVideoWrapper';\r\nimport StyledVideo from './styles/StyledVideo';\r\n\r\n\r\n\r\n\r\nconst Video = ({active, autoplay, endCallback, progressCallback}) => (\r\n  <StyledVideo>\r\n    <StyledVideoWrapper>\r\n      <ReactPlayer \r\n        width='100%'\r\n        height='100%'\r\n        style={{ position: 'absolute', top: '0' }}\r\n        playing={autoplay}\r\n        controls={true}\r\n        url={active.video}\r\n        onEnded={endCallback}\r\n        onProgress={progressCallback}\r\n      />\r\n    </StyledVideoWrapper>\r\n  </StyledVideo>\r\n)  \r\n\r\nexport default Video;","import styled from \"styled-components\";\r\n\r\nconst StyledPlaylistHeader = styled.div`\r\n  background: #696969;\r\n  font-family: \"Hind\", sans-serif;\r\n  font-weight: 800;\r\n  font-size: 1.6em;\r\n  color: #fff;\r\n  padding: 0 20px;\r\n  margin: 0 0 20px 0;\r\n  min-height: 80px;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default StyledPlaylistHeader;","import styled from \"styled-components\";\r\n\r\nconst StyledJourney = styled.div`\r\n  background: #565656;\r\n  font-size: 0.8em;\r\n  padding: 2px 5px;\r\n  height: 20px;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport default StyledJourney;","import React from 'react';\r\nimport StyledPlaylistHeader from './styles/StyledPlaylistHeader';\r\nimport StyledJourney from './styles/StyledJourney';\r\n\r\nconst PlaylistHeader = ({active, total}) => (\r\n  <StyledPlaylistHeader>\r\n    <p> {active.title} </p>\r\n    <StyledJourney>\r\n      {active.num} / {total}\r\n    </StyledJourney>\r\n  </StyledPlaylistHeader>\r\n)  \r\n\r\nexport default PlaylistHeader;","import styled from \"styled-components\";\r\n\r\nconst StyledPlaylistItem = styled.div`\r\n  font-family: \"Hind\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  background: none;\r\n  border: ${props => (props.active ? \"2px dotted #696969\" : \"none\")};\r\n  font-size: 1.6em;\r\n  color: ${props => props.theme.color};\r\n  min-height: 50px;\r\n  padding: 10px 20px;\r\n  margin: 0 0 10px 0;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: ${props => (props.active ? \"5px\" : \"0\")};\r\n  cursor: pointer;\r\n  position: relative;\r\n  ::before {\r\n    display: ${props => (props.active || !props.played ? \"none\" : \"block\")};\r\n    content: \"\";\r\n    width: 10px;\r\n    min-height: 10px;\r\n    background: #409f4e;\r\n    border-radius: 50px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 19px;\r\n  }\r\n  .wbn-player__video-nr {\r\n    flex-grow: 1; /* default 0 */\r\n    max-width: 30px;\r\n    padding-right: 20px;\r\n    border-right: 2px solid #565656;\r\n  }\r\n  .wbn-player__video-name,\r\n  .wbn-player__video-name a {\r\n    flex-grow: 10; /* default 0 */\r\n    padding: 0 0 0 10px;\r\n    color: ${props => props.theme.color};\r\n    text-align: left;\r\n    text-decoration: none;\r\n    display: block;\r\n  }\r\n  .wbn-player__video-time {\r\n    background: #565656;\r\n    min-width: 45px;\r\n    color: #fff;\r\n    font-size: 0.8em;\r\n    padding: 0px 5px;\r\n    height: 20px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    margin: 0 0 0 5px;\r\n  }\r\n  .wbn-player__video-download {\r\n    flex-grow: 1; /* default 0 */\r\n    color: ${props => (props.played ? \"#fff\" : props.theme.color)};\r\n    margin: 0 0 0 20px;\r\n    max-width: 30px;\r\n    padding: 0 20px;\r\n    border-left: 2px solid #565656;\r\n    font-family: \"fontello\";\r\n    font-style: normal;\r\n    font-weight: normal;\r\n  }\r\n  .wbn-player__video-download a {\r\n    color: ${props =>\r\n      props.played && !props.active ? \"#fff\" : props.theme.color};\r\n  }\r\n  .active {\r\n    opacity: 0.1;\r\n  }\r\n`;\r\n\r\nexport default StyledPlaylistItem;","import React from 'react';\r\nimport StyledPlaylistItem from './styles/StyledPlaylistItem';\r\n\r\nconst PlaylistItem = ({video, active, played}) => (\r\n  <StyledPlaylistItem active={active} played={played}>\r\n    <div className=\"wbn-player__video-nr\"> {video.num} </div>\r\n    <div className=\"wbn-player__video-name\"> {video.title} </div>\r\n    <div className=\"wbn-player__video-time\"> {video.duration} </div>\r\n  </StyledPlaylistItem>\r\n)\r\n\r\nexport default PlaylistItem;","import styled from \"styled-components\";\r\n\r\nconst StyledPlaylistitems = styled.div`\r\n  padding: 0 20px;\r\n  overflow-y: auto;\r\n  height: 28vw;\r\n  max-height: 500px;\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: transparent;\r\n  }\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n    border-radius: 2px;\r\n  }\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n\r\nexport default StyledPlaylistitems;","import React from 'react';\r\nimport PlaylistItem from '../PlaylistItem';\r\nimport StyledPlaylistitems from '../styles/StyledPlaylistitems';\r\nimport withLink from '../hoc/withLink';\r\n\r\nconst PlaylistItemWithLink = withLink(PlaylistItem);\r\n\r\nconst PlaylistItems = ({videos, active}) => (\r\n  <StyledPlaylistitems>\r\n    {videos.map(video => (\r\n      <PlaylistItemWithLink\r\n                key={video.id}\r\n                video={video}\r\n                active={video.id === active.id ? true : false}\r\n                played={video.played}\r\n      />\r\n      ))}\r\n  </StyledPlaylistitems>\r\n)  \r\n\r\nexport default PlaylistItems;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst withLink = WrappedComponent => props => {\r\n  const newProps = {\r\n    ...props, \r\n    video: {\r\n      ...props.video,\r\n      title: (\r\n        <Link to={{ pathname: `/${props.video.id}`, autoplay: true }}>\r\n          {props.video.title}\r\n        </Link>\r\n      )\r\n    }\r\n  }\r\n\r\n  return <WrappedComponent {...newProps} />;\r\n}\r\n\r\nexport default withLink;","import styled from \"styled-components\";\r\n\r\nconst StyledNightmode = styled.div`\r\n  font-family: \"Hind\", sans-serif;\r\n  font-weight: 800;\r\n  font-size: 1.6em;\r\n  color: ${props => props.theme.color};\r\n  padding: 0;\r\n  margin: 20px;\r\n  /* CSS taken from https://www.w3schools.com/howto/howto_css_switch.asp */\r\n  /* The switch - the box around the slider */\r\n  .switch {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 40px;\r\n    height: 24px;\r\n  }\r\n  /* Hide default HTML checkbox */\r\n  .switch input {\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n  /* The slider */\r\n  .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #ccc;\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n  }\r\n  .slider:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 16px;\r\n    width: 16px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n  }\r\n  input:checked + .slider {\r\n    background-color: #3d5138;\r\n  }\r\n  input:focus + .slider {\r\n    box-shadow: 0 0 1px #2196f3;\r\n  }\r\n  input:checked + .slider:before {\r\n    -webkit-transform: translateX(16px);\r\n    -ms-transform: translateX(16px);\r\n    transform: translateX(16px);\r\n  }\r\n  /* Rounded sliders */\r\n  .slider.round {\r\n    border-radius: 30px;\r\n  }\r\n  .slider.round:before {\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport default StyledNightmode;","import React from 'react';\r\nimport StyledNightmode from './styles/StyledNightmode';\r\n\r\nconst NightMode = ({nightModeCallback, NightMode}) => (\r\n  <StyledNightmode>\r\n    <span>Nightmode: </span>\r\n    <label className='switch'>\r\n      <input type=\"checkbox\" checked={NightMode} onChange={nightModeCallback} />\r\n      <span className=\"slider round\"></span>\r\n    </label>\r\n  </StyledNightmode>\r\n)  \r\n\r\nexport default NightMode;","import styled from \"styled-components\";\r\n\r\nconst StyledPlaylist = styled.div`\r\n  -webkit-box-flex: 1;\r\n  -ms-flex: 1 1 450px;\r\n  flex: 1 1 450px;\r\n  overflow: hidden;\r\n  color: white;\r\n  @media screen and (max-width: 1400px) {\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport default StyledPlaylist;","import React from 'react';\r\nimport PlaylistHeader from '../PlaylistHeader';\r\nimport PlaylistItems from \"../containers/PlaylistItems\";\r\nimport NightMode from '../Nightmode';\r\nimport StyledPlaylist from '../styles/StyledPlaylist';\r\n\r\n\r\nconst Playlist = ({videos, active, nightModeCallback, nightMode}) => (\r\n    <StyledPlaylist>\r\n      <NightMode nightModeCallback={nightModeCallback} nightMode={nightMode} />\r\n      <PlaylistHeader active={active} total={videos.length} />\r\n      <PlaylistItems videos={videos} active={active} />\r\n    </StyledPlaylist>\r\n)  \r\n\r\nexport default Playlist;","import styled from \"styled-components\";\r\n\r\nconst StyledWbnPlayer = styled.div`\r\n  background: ${props => props.theme.bgcolor};\r\n  border: ${props => props.theme.border};\r\n  max-width: 1800px;\r\n  margin: 0 auto;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  flex-direction: row;\r\n  max-height: 863px;\r\n  transition: all 0.5s ease;\r\n  @media screen and (max-width: 1300px) {\r\n    display: block;\r\n    max-height: 10000px;\r\n  }\r\n${'' /*   @media screen and (max-width: 1400px) {\r\n    display: block;\r\n    max-height: 10000px;\r\n  } */}\r\n`;\r\n\r\nexport default StyledWbnPlayer;","import React, {useState, useEffect} from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport Video from '../Video';\r\nimport Playlist from '../containers/Playlist';\r\nimport StyledWbnPlayer from '../styles/StyledWbnPlayer'\r\n\r\nconst theme = {\r\n  bgcolor: '#353535',\r\n  bgcolorItem: '#414141',\r\n  bgcolorItemActive: '#405c63',\r\n  bgcolorPlayed: '#526d4e',\r\n  border: 'none',\r\n  borderPlayed: 'none',\r\n  color: '#fff',\r\n}\r\n\r\nconst themeLight = {\r\n  bgcolor: '#fff',\r\n  bgcolorItem: '#fff',\r\n  bgcolorItemActive: '#80a7b1',\r\n  bgcolorPlayed: '#7d9979',\r\n  border: '1 px solid #353535',\r\n  borderPlayed: 'none',\r\n  color: '#353535',\r\n}\r\n\r\nconst WbnPlayer = props => {\r\n  const videos = JSON.parse(document.querySelector('[name=\"videos\"]').value);\r\n  const savedState = JSON.parse(localStorage.getItem(`${videos.playlistId}`));\r\n\r\n  const [state, setState] = useState({\r\n    videos: savedState ? savedState.videos : videos.playlist,\r\n    activeVideo: savedState ? savedState.activeVideo : videos.playlist[0],\r\n    nightMode: savedState ? savedState.nightMode : true,\r\n    playlistId: savedState ? savedState.playlistId : videos.playlistId,\r\n    autoplay: false,\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      localStorage.setItem(`${state.playlistId}`, JSON.stringify({ ...state }));\r\n    },\r\n    [state]\r\n  )\r\n\r\n  useEffect(() => {\r\n    const videoId = props.match.params.activeVideo;\r\n    if (videoId !== undefined) {\r\n      const newActiveVideo = state.videos.findIndex(\r\n        video => video.id === videoId\r\n      )\r\n      setState(prev => ({\r\n        ...prev,\r\n        activeVideo: prev.videos[newActiveVideo],\r\n        autoplay: props.location.autoplay,\r\n      }))\r\n    } else {\r\n      props.history.push({\r\n        pathname: `${state.activeVideo.id}`,\r\n        autoplay: false,\r\n      })\r\n    }\r\n  }, [props.history, props.location.autoplay, props.match.params.activeVideo, state.activeVideo.id, state.videos]);\r\n\r\n  const nightModeCallback = () => {\r\n    setState({ ...state, nightMode: !state.nightMode });\r\n  }\r\n  const endCallback = () => {\r\n    const videoId = props.match.params.activeVideo;\r\n    const currentVideoIndex = state.videos.findIndex(\r\n      video => video.id === videoId\r\n    );\r\n\r\n    const nextVideo =\r\n      currentVideoIndex === state.videos.length - 1 ? 0 : currentVideoIndex + 1;\r\n    \r\n    props.history.push({\r\n      pathname: `${state.videos[nextVideo].id}`,\r\n      autoplay: false\r\n    })\r\n  }\r\n  \r\n  const progressCallback = e => {\r\n    if (e.playedSeconds > 10 && e.playedSeconds < 11) {\r\n      const videos = [...state.videos];\r\n      const playedVideo = videos.find(\r\n        video => video.id === state.activeVideo.id\r\n      )\r\n      playedVideo.played = true;\r\n      setState({...state, videos })\r\n/*       setState({\r\n        ...state,\r\n        videos: state.videos.map(element => {\r\n          return element.id === state.activeVideo.id\r\n            ? { ...element, played: true }\r\n            : element;\r\n        })\r\n      }); */\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={state.nightMode ? theme : themeLight}>\r\n      {state.videos !== null ? (\r\n        <StyledWbnPlayer>\r\n          <Video\r\n            active={state.activeVideo}\r\n            autoplay={state.autoplay}\r\n            endCallback={endCallback}\r\n            progressCallback={progressCallback}\r\n          />\r\n          <Playlist \r\n            videos={state.videos}\r\n            active={state.activeVideo}\r\n            nightModeCallback={nightModeCallback}\r\n            nightMode={state.nightMode}\r\n          />\r\n        </StyledWbnPlayer>\r\n      ) : null}\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default WbnPlayer;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    font-size: 10px;\r\n    font-family: 'Hind', sans-serif;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;","import React from 'react';\r\nimport WbnPlayer from './WbnPlayer';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Globalstyle from '../styles/GlobalStyle';\r\n\r\n\r\nconst App = () => (\r\n  <BrowserRouter basename='/react-video-player/'>\r\n    <>\r\n      <Switch>\r\n        <Route exact path='/' component={WbnPlayer} />\r\n        <Route exact path='/:activeVideo' component={WbnPlayer} />\r\n      </Switch>\r\n      <Globalstyle />\r\n    </>\r\n  </BrowserRouter>\r\n)\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}